method = "Burt",
graph = FALSE
)
#Visualize MCA outcome
fviz_mca_var(
mca_leisure,
axes = c(1, 3),
choice = "var.cat",
repel = TRUE,
map = "symmetric",
shape.var = "circle",
col.var = "orange2",
col.quali.sup = "black"
) +
ggtitle("Space of Lifestyles in urban China",
subtitle = "Multiple Correspondence Analysis with Burt Method") +
labs(caption = "Source: CGSS2013") +
theme_classic() +
theme(text = element_text(size = 20))
km_leisure <- data.frame(mca_leisure$ind$coord)
km_dist <- cluster::daisy(km_leisure)
kmeans_test <- function(num, nboot) {
set.seed(1)
class_km <- fpc::clusterboot(
km_leisure,
B = nboot,
bootmethod = "boot",
multipleboot = TRUE,
dissolution = 0.5,
recover = 0.7,
count = FALSE,
showplots = FALSE,
clustermethod = fpc::kmeansCBI,
iter.max = 10000,
algorithm = "Lloyd",
krange = num
)
class_km %>% print()
return(class_km$result$result)
}
class_km_3 <- kmeans_test(3, 1000)
ward_kmeans <- function(dta, num) {
res <- hcut(
dta,
k = num,
hc_func = "hclust",
hc_method = "ward.D",
hc_metric = "euclidean",
stand = FALSE,
graph = FALSE
)
#Compute the centroid of hierarchical clustering
clusters <- res$cluster
clust.centroid <- function(i, dat, clusters) {
ind = (clusters == i)
colMeans(dat[ind, ])
}
centroid <-
sapply(unique(clusters), clust.centroid, dta, clusters) %>% t()
#K-means clustering using the centroid of hierarchical clustering as initial assignment
groupes.kmeans <- kmeans(dta,
centers = centroid,
algorithm = "Lloyd",
iter.max = 1000)
return(groupes.kmeans)
}
km_leisure <- km_leisure
res <- hcut(
km_leisure,
k = 7,
hc_func = "hclust",
hc_method = "ward.D",
hc_metric = "euclidean",
stand = FALSE,
graph = FALSE
)
#Visualize dendrogram
hcd <- as.dendrogram(res)
hcd_cut <- cut(hcd, h = 10)
fviz_dend(hcd_cut$upper,
k = 3,
palette = "jco",
show_labels = FALSE) +
ggtitle("Dendrogram Plot from Hierarchical Clustering",
subtitle = "With Ward.D measure and Euclidean distance, cut at height of 100") +
labs(caption = "Source: MCA based on CFPS") +
theme_classic()
ward_kmeans_3 <- ward_kmeans(km_leisure, 4)
clusters_lifestyle <- ward_kmeans_3$cluster
#MCA based on the data
dta_mca_social <- cbind(clusters_lifestyle,
dta_merged %>% select(Watch_TV_DVD:work_out_at_gyms)) %>%
as.data.frame()
mca_social_0 <- MCA(
dta_mca_social,
quali.sup = 1,
ncp = 3,
na.method = "Average",
method = "Burt",
graph = FALSE
)
#Visualize MCA outcome
fviz_mca_var(
mca_social_0,
axes = c(1, 3),
repel = FALSE,
choice = "var.cat",
map = "symmetric",
shape.var = "circle",
col.var = "orange2",
col.quali.sup = "black"
) +
ggtitle("Social Space in urban China",
subtitle = "Multiple Correspondence Analysis with Burt Method") +
labs(caption = "Source: CGSS 2013") +
theme_classic()
#Visualize individual households in MCA by several measures
#Visualize individual households in MCA by several measures
fviz_mca_ind(
mca_social_0,
axes = c(1, 3),
label = "none",
habillage = 1,
palette = "Set1",
addEllipses = TRUE,
ellipse.level = 0.5
) +
ggtitle("Lifestyle categories projected on the space of lifestyle in urban China",
subtitle = "Ellipse covering 50% in group") +
labs(caption = "Source: Bootstrapped hierarchical and K-means Clustering clustering based on CGSS2013") +
theme_classic() +
theme(text = element_text(size = 20))
#MCA based on the data
dta_mca_social <- cbind(
clusters_lifestyle,
dta_merged %>% select(fincome_group,
education,
occupation,
party,
hukou)
) %>% as.data.frame()
mca_social <- MCA(
dta_mca_social,
quali.sup = 1,
ncp = 3,
na.method = "Average",
method = "Burt",
graph = FALSE
)
#Visualize MCA outcome
fviz_mca_var(
mca_social,
axes = c(1, 3),
repel = FALSE,
choice = "var.cat",
map = "symmetric",
shape.var = "circle",
col.var = "orange2",
col.quali.sup = "black"
) +
ggtitle("Social Space in urban China",
subtitle = "Multiple Correspondence Analysis with Burt Method") +
labs(caption = "Source: CGSS 2013") +
theme_classic() +
theme(text = element_text(size = 20))
#Visualize individual households in MCA by several measures
fviz_mca_ind(
mca_social,
axes = c(1, 3),
label = "none",
habillage = 1,
palette = "Set1",
addEllipses = TRUE,
ellipse.level = 0.5
) +
ggtitle(
"Verifying Structural homology: lifestyle categories projected on the social space",
subtitle = "Ellipse covering 50% in group"
) +
labs(caption = "Source: Bootstrapped K-medoid clustering on CGSS2013") +
theme_classic() +
theme(text = element_text(size = 20))
dta_big <- inner_join(dta_merged %>% select(id),
cgss %>% select(id, age:work_out_at_gyms),
by = "id")
dta_big <- inner_join(dta_big,
cgss_raw,
by = "id")
dta_final <-
cbind(dta_big, km_leisure, clusters_lifestyle) %>% mutate(fincome = fincome /
10000)
save.dta13(dta_final, file = "cgss_dta_merged.dta")
library(rgdal)
library(tmap)
parcel <- readOGR(dsn = "chn_admbnda_adm1_ocha",
layer = "chn_admbnda_adm1_ocha")
dta_final$lower <- dta_final$clusters_lifestyle == 1
dta_final$middle <- dta_final$clusters_lifestyle == 2
dta_final$cultural <- dta_final$clusters_lifestyle == 3
dta_final$economic <- dta_final$clusters_lifestyle == 4
parcel@data$province <- parcel@data$ADM1_EN
summary_province <- dta_final %>% group_by(province) %>% summarise(
n(),
lower = (sum(lower) *
100) / n(),
middle = (sum(middle) *
100) / n(),
cultural =
(sum(cultural) * 100) / n(),
economic =
(sum(economic) * 100) / n(),
fincome = median(fincome, na.rm = TRUE),
education =
mean(education_yrs, na.rm = TRUE)
)
parcel@data <-
left_join(parcel@data, summary_province, by = "province")
tm_shape(parcel) +
tm_fill("cultural",
title = "%Cultural class in urban area",
palette = "BuPu") +
tm_borders(col = "black") +
tm_layout(
legend.title.size = 2,
legend.text.size = 1.5,
legend.position = c("left", "top"),
legend.bg.color = "white",
legend.bg.alpha = 0
)
tm_shape(parcel) +
tm_fill("economic",
title = "%Economic class in urban area",
palette = "GnBu") +
tm_borders(col = "black") +
tm_layout(
legend.title.size = 2,
legend.text.size = 1.5,
legend.position = c("left", "top"),
legend.bg.color = "white",
legend.bg.alpha = 0
)
tm_shape(parcel) +
tm_fill("middle",
title = "%Middle class in urban area",
palette = "OrRd") +
tm_borders(col = "black") +
tm_layout(
legend.title.size = 2,
legend.text.size = 1.5,
legend.position = c("left", "top"),
legend.bg.color = "white",
legend.bg.alpha = 0
)
tm_shape(parcel) +
tm_fill("lower",
title = "%Lower class in urban area",
palette = "OrRd") +
tm_borders(col = "black") +
tm_layout(
legend.title.size = 2,
legend.text.size = 1.5,
legend.position = c("left", "top"),
legend.bg.color = "white",
legend.bg.alpha = 0
)
dta <- cbind(
dim1 = km_leisure$Dim.1,
dim2 = km_leisure$Dim.2,
dim3 = km_leisure$Dim.3,
dim4 = km_leisure$Dim.4,
dim5 = km_leisure$Dim.5,
dta_final
)
lm_1 <- lm(
subjclass %>% as.numeric() ~
age +
gender +
fincome +
asset %>% as.numeric() +
education_yrs +
occupation %>% as.numeric() +
party +
hukou
,
data = dta
)
lm_2 <- lm(
subjclass %>% as.numeric() ~
age +
gender +
fincome +
asset %>% as.numeric() +
education_yrs +
occupation %>% as.numeric() +
party +
hukou +
clusters_lifestyle
,
data = dta
)
lm_3 <- lm(
subjclass %>% as.numeric() ~
age +
gender +
fincome +
asset %>% as.numeric() +
education_yrs +
occupation %>% as.numeric() +
party +
hukou +
dim1 +
dim2 +
dim3
,
data = dta
)
export_summs(lm_1, lm_2, lm_3)
dta_km <- cbind(
km_leisure %>% select(dim1 = Dim.1,
dim2 = Dim.2),
dta_merged %>% select(fincome,
education_yrs,
asset,
occupation,
party,
hukou)
) %>% as.data.frame()
g.dist <- cluster::daisy(dta_km, metric = "gower")
cluster_test <- function(num, nboot) {
set.seed(1)
class_pamk <- fpc::clusterboot(
g.dist,
B = nboot,
distances = TRUE,
bootmethod = "boot",
multipleboot = TRUE,
dissolution = 0.5,
recover = 0.7,
count = FALSE,
showplots = FALSE,
clustermethod = fpc::pamkCBI,
k = num,
criterion = "asw",
usepam = TRUE
)
class_pamk %>% print()
return(class_pamk$result$result)
}
class_report <- function(class_pamk) {
dta_total <- cbind(cluster = class_pamk$pamobject$clustering,
dta_big) %>% as.data.frame()
dta_pamk <- cbind(
cluster = class_pamk$pamobject$clustering,
dta_merged %>% select(
age,
age_group,
gender,
fincome,
asset,
education,
education_yrs,
occupation,
party,
hukou,
subjclass,
Watch_TV_DVD:work_out_at_gyms
)
)
summary_pamk <- dta_pamk %>% group_by(cluster) %>% summarise(
n(),
mean((gender %>% as.integer() -
1), na.rm = TRUE),
mean(age),
mean(fincome),
median(fincome),
mean(asset %>% as.integer()),
mean(education_yrs),
mean((party %>% as.integer() -
1), na.rm = TRUE),
mean((hukou %>% as.integer() -
1), na.rm = TRUE),
mean(subjclass %>% as.integer())
)
occupation_pamk <-
table(dta_pamk$cluster, dta_pamk$occupation) %>% as.data.frame()
#MCA based on the data
dta_mca_pamk <- cbind(
cluster = class_pamk$pamobject$clustering,
dta_merged %>% select(
age_group,
gender,
fincome_group,
asset,
education,
occupation,
party,
hukou,
subjclass,
#Watch_TV_DVD:work_out_at_gyms
)
)
mca_pamk <- MCA(
dta_mca_pamk,
quali.sup = 1,
ncp = 5,
na.method = "Average",
method = "Burt",
graph = FALSE
)
#Visualize MCA outcome
mca_pamk_plot <- fviz_mca_var(
mca_pamk,
axes = c(1, 2),
choice = "var.cat",
repel = TRUE,
map = "symmetric",
shape.var = "circle",
col.var = "orange2",
col.quali.sup = "black"
) +
ggtitle("Space of Lifestyles in urban China",
subtitle = "Multiple Correspondence Analysis with Burt Method") +
labs(caption = "Source: CGSS2013") +
theme_classic()
output <- list(
summary_pamk,
occupation_pamk,
mca_pamk_plot,
class_pamk,
dta_mca_pamk,
mca_pamk,
dta_total
)
return(output)
}
load("class_pamk_3.RData")
class_model_3 <- class_report(class_pamk_3)
class_model_3[[3]]
class_model_3_model <- class_model_3[[4]]
class_model_3_dta <- class_model_3[[7]]
class_model_3_sum <- class_model_3[[1]]
class_model_3_occ <- class_model_3[[2]]
cluster_social <- class_model_3_model$pamobject$clustering
#Plot contribution of variables of first dimension
contrib.plot1 <- fviz_contrib(
mca_leisure,
choice = "var",
axes = 1,
sort.val = "desc",
top = 10
) +
xlab("variable group") +
labs(caption = "Source: Multiple Correspondence Analysis based on CFPS") +
theme_classic() +
theme(axis.text.x = element_text(angle = 30, hjust = 1))
#Plot contribution of variables of second dimension
contrib.plot2 <- fviz_contrib(
mca_leisure,
choice = "var",
axes = 3,
sort.val = "desc",
top = 10
) +
xlab("variable group") +
labs(caption = "Source: Multiple Correspondence Analysis based on CFPS") +
theme_classic() +
theme(axis.text.x = element_text(angle = 30, hjust = 1))
#Show together
grid.arrange(contrib.plot1,
contrib.plot2,
ncol = 1)
#Plot contribution of variables of first dimension
contrib.plot1 <- fviz_contrib(
mca_social,
choice = "var",
axes = 1,
sort.val = "desc",
top = 10
) +
xlab("variable group") +
labs(caption = "Source: Multiple Correspondence Analysis based on CFPS") +
theme_classic() +
theme(axis.text.x = element_text(angle = 30, hjust = 1))
#Plot contribution of variables of second dimension
contrib.plot2 <- fviz_contrib(
mca_social,
choice = "var",
axes = 2,
sort.val = "desc",
top = 10
) +
xlab("variable group") +
labs(caption = "Source: Multiple Correspondence Analysis based on CFPS") +
theme_classic() +
theme(axis.text.x = element_text(angle = 30, hjust = 1))
#Show together
grid.arrange(contrib.plot1,
contrib.plot2,
ncol = 1)
save(cgss,file="cgss.RData")
tm_shape(parcel) +
tm_fill("lower",
title = "%Lower class in urban area",
palette = "Greys") +
tm_borders(col = "black") +
tm_layout(
legend.title.size = 2,
legend.text.size = 1.5,
legend.position = c("left", "top"),
legend.bg.color = "white",
legend.bg.alpha = 0
)
